{"ast":null,"code":"import axios from 'axios';\nconst url = \"http://143.110.186.152:8080/\";\n// Create a new Axios instance\nconst axiosInstance = axios.create({\n  baseURL: url,\n  // Set the base URL for all requests\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: 'Bearer your-token' // Set default headers\n  }\n});\n\n// You can also add interceptors to handle request and response\naxiosInstance.interceptors.request.use(config => {\n  // Modify the request configuration\n  console.log('Request Interceptor:', config);\n  return config;\n}, error => {\n  // Handle request errors\n  console.error('Request Error:', error);\n  return Promise.reject(error);\n});\naxiosInstance.interceptors.response.use(response => {\n  // Modify the response data\n  console.log('Response Interceptor:', response);\n  return response;\n}, error => {\n  // Handle response errors\n  console.error('Response Error:', error);\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","url","axiosInstance","create","baseURL","headers","Authorization","interceptors","request","use","config","console","log","error","Promise","reject","response"],"sources":["D:/office/cc-front/src/Axios/axios.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n\r\nconst url  = \"http://143.110.186.152:8080/\"\r\n// Create a new Axios instance\r\nconst axiosInstance = axios.create({\r\n  baseURL: url, // Set the base URL for all requests\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    Authorization: 'Bearer your-token', // Set default headers\r\n  },\r\n});\r\n\r\n// You can also add interceptors to handle request and response\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    // Modify the request configuration\r\n    console.log('Request Interceptor:', config);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    // Handle request errors\r\n    console.error('Request Error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    // Modify the response data\r\n    console.log('Response Interceptor:', response);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // Handle response errors\r\n    console.error('Response Error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,GAAG,GAAI,8BAA8B;AAC3C;AACA,MAAMC,aAAa,GAAGF,KAAK,CAACG,MAAM,CAAC;EACjCC,OAAO,EAAEH,GAAG;EAAE;EACdI,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClCC,aAAa,EAAE,mBAAmB,CAAE;EACtC;AACF,CAAC,CAAC;;AAEF;AACAJ,aAAa,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACnCC,MAAM,IAAK;EACV;EACAC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,MAAM,CAAC;EAC3C,OAAOA,MAAM;AACf,CAAC,EACAG,KAAK,IAAK;EACT;EACAF,OAAO,CAACE,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;EACtC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAEDX,aAAa,CAACK,YAAY,CAACS,QAAQ,CAACP,GAAG,CACpCO,QAAQ,IAAK;EACZ;EACAL,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEI,QAAQ,CAAC;EAC9C,OAAOA,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EACT;EACAF,OAAO,CAACE,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;EACvC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeX,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}