{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n// import axios from 'axios';\nimport axiosInstance from '../Axios/axios';\nimport axios from 'axios';\nexport const check = createAsyncThunk('structure/check', async data => {\n  const response = axiosInstance.post('/checkvalue', data);\n  return response;\n});\nexport const recheck = createAsyncThunk('structure/recheck', async data => {\n  const response = axiosInstance.post('/recheck', data);\n  return response;\n});\nexport const genrate = createAsyncThunk('structure/genrate', async data => {\n  console.log(\"Data send in genrate\", data);\n  const response = await axiosInstance.post('/genrate', data, {\n    responseType: 'blob'\n  });\n  const url = window.URL.createObjectURL(new Blob([response.data]));\n  console.log(\"data in res\", response);\n  const link = document.createElement('a');\n  link.href = url;\n  link.setAttribute('download', 'output.zip');\n  document.body.appendChild(link);\n  link.click();\n  link.remove();\n  return true;\n});\nconst structureSlice = createSlice({\n  name: \"structure\",\n  initialState: {\n    structureData: null,\n    loading: false,\n    error: null,\n    status: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(check.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(check.fulfilled, (state, action) => {\n      state.loading = false;\n      state.structureData = action.payload.data;\n    }).addCase(check.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    }).addCase(recheck.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(recheck.fulfilled, (state, action) => {\n      state.loading = false;\n      state.structureData = action.payload.data;\n    }).addCase(recheck.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    }).addCase(genrate.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(genrate.fulfilled, (state, action) => {\n      state.loading = false;\n      state.structureData = null;\n    }).addCase(genrate.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    });\n  }\n});\nexport const {\n  actions: structureActions\n} = structureSlice;\n\n// Export the reducer\nexport default structureSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axiosInstance","axios","check","data","response","post","recheck","genrate","console","log","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","structureSlice","name","initialState","structureData","loading","error","status","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","actions","structureActions","reducer"],"sources":["D:/office/cc-front/src/Slice/strucureSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n// import axios from 'axios';\r\nimport axiosInstance from '../Axios/axios'; \r\nimport axios from 'axios';\r\n\r\nexport const check = createAsyncThunk(\r\n    'structure/check',\r\n    async (data) =>{\r\n        const response =  axiosInstance.post('/checkvalue',data)\r\n        return response\r\n    }\r\n)\r\n\r\nexport const recheck = createAsyncThunk(\r\n    'structure/recheck',\r\n    async(data)=>{\r\n        const response = axiosInstance.post('/recheck',data)\r\n        return response\r\n    }\r\n)\r\nexport const genrate = createAsyncThunk(\r\n    'structure/genrate',\r\n    \r\n    async(data)=>{\r\n        console.log(\"Data send in genrate\",data)\r\n        const response = await axiosInstance.post('/genrate',data, { responseType: 'blob' })\r\n        const url = window.URL.createObjectURL(new Blob([response.data]));\r\n        console.log(\"data in res\",response)\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        link.setAttribute('download', 'output.zip');\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        link.remove();\r\n  \r\n        return true;\r\n    }  \r\n)\r\n\r\n\r\nconst structureSlice = createSlice({\r\n    name:\"structure\",\r\n    initialState: {\r\n        structureData: null,\r\n        loading: false,\r\n        error: null,\r\n        status:null\r\n      },\r\n      reducers:{\r\n\r\n      },extraReducers:(builder)=>{\r\n        builder\r\n        .addCase(check.pending,(state)=>{\r\n            state.loading = true;\r\n            state.error =  null;\r\n        })\r\n        .addCase(check.fulfilled,(state,action)=>{\r\n            state.loading = false;\r\n            state.structureData = action.payload.data\r\n        })\r\n        .addCase(check.rejected,(state,action)=>{\r\n            state.loading= false;\r\n            state.error = action.error.message\r\n        })\r\n        .addCase(recheck.pending,(state)=>{\r\n            state.loading = true;\r\n            state.error = null;\r\n        })\r\n        .addCase(recheck.fulfilled,(state,action)=>{\r\n            state.loading =  false;\r\n            state.structureData = action.payload.data\r\n        })\r\n        .addCase(recheck.rejected,(state,action)=>{\r\n            state.loading = false;\r\n            state.error = action.error.message;\r\n        })\r\n        .addCase(genrate.pending,(state)=>{\r\n            state.loading = true;\r\n            state.error = null;\r\n        })\r\n        .addCase(genrate.fulfilled,(state,action)=>{\r\n            state.loading =  false;\r\n            state.structureData = null\r\n        })\r\n        .addCase(genrate.rejected,(state,action)=>{\r\n            state.loading = false;\r\n            state.error = action.error.message;\r\n        })\r\n      }\r\n})\r\n\r\nexport const { actions: structureActions } = structureSlice;\r\n\r\n  \r\n// Export the reducer\r\nexport default structureSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}